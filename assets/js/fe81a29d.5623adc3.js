"use strict";(self.webpackChunkten_docs=self.webpackChunkten_docs||[]).push([[8070],{8486:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var s=t(5893),r=t(1151);const a={sidebar_position:4},o="Programmable Access to Gateway",i={id:"tools-infrastructure/programmable-gateway",title:"Programmable Access to Gateway",description:"Base URL//testnet.ten.xyz",source:"@site/docs/tools-infrastructure/programmable-gateway.md",sourceDirName:"tools-infrastructure",slug:"/tools-infrastructure/programmable-gateway",permalink:"/docs/tools-infrastructure/programmable-gateway",draft:!1,unlisted:!1,editUrl:"https://github.com/ten-protocol/ten-documentation/blob/main/docs/tools-infrastructure/programmable-gateway.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Hosted Gateway",permalink:"/docs/tools-infrastructure/hosted-gateway"},next:{title:"Standard Bridge",permalink:"/docs/tools-infrastructure/standard-bridge"}},c={},d=[{value:"1. Get Encryption Token",id:"1-get-encryption-token",level:2},{value:"2. Get Message to Sign",id:"2-get-message-to-sign",level:2},{value:"3. Authenticate User",id:"3-authenticate-user",level:2},{value:"4. Query Address Registration",id:"4-query-address-registration",level:2},{value:"5. Revoke Access",id:"5-revoke-access",level:2},{value:"RPC Usage",id:"rpc-usage",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"programmable-access-to-gateway",children:"Programmable Access to Gateway"}),"\n",(0,s.jsx)(n.h1,{id:"ten-network-gateway-api",children:"TEN Network Gateway API"}),"\n",(0,s.jsxs)(n.p,{children:["Base URL: ",(0,s.jsx)(n.code,{children:"https://testnet.ten.xyz"})]}),"\n",(0,s.jsx)(n.h2,{id:"1-get-encryption-token",children:"1. Get Encryption Token"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint:"})," ",(0,s.jsx)(n.code,{children:"GET /v1/join"})]}),"\n",(0,s.jsx)(n.p,{children:"Generates and returns an EncryptionToken."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"curl -X GET https://testnet.ten.xyz/v1/join\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch('https://testnet.ten.xyz/v1/join');\nconst token = await response.text();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"2-get-message-to-sign",children:"2. Get Message to Sign"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint:"})," ",(0,s.jsx)(n.code,{children:"POST /v1/getmessage"})]}),"\n",(0,s.jsx)(n.p,{children:"Generates and returns a message (if needed 712 typed message too) for the user to sign based on the provided encryption token."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://testnet.ten.xyz/v1/getmessage/" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "encryptionToken": "$EncryptionToken",\n    "formats": ["EIP712"]\n  }\'\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const msgRes = await fetch('https://testnet.ten.xyz/v1/getmessage/', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({\n    encryptionToken: token,\n    formats: ['EIP712'],\n  }),\n});\nconst data = await msgRes.json();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-authenticate-user",children:"3. Authenticate User"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint:"})," ",(0,s.jsx)(n.code,{children:"POST /v1/authenticate?token=$EncryptionToken"})]}),"\n",(0,s.jsx)(n.p,{children:"Submits a signed message in the format address & signature, proving ownership of the private keys for the account, and links that account with the encryption token."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://testnet.ten.xyz/v1/authenticate/?token=$EncryptionToken" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n    "address": "$Address",\n    "signature": "$Signature"\n  }\'\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"await fetch(`https://testnet.ten.xyz/v1/authenticate/?token=${EncryptionToken}`, {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({\n    address,\n    signature: sig\n  }),\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"4-query-address-registration",children:"4. Query Address Registration"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint:"})," ",(0,s.jsx)(n.code,{children:"GET /v1/query/address?token=$EncryptionToken&a=$Address"})]}),"\n",(0,s.jsx)(n.p,{children:'Returns a JSON response indicating whether the address "a" is registered for the user.'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X GET "https://testnet.ten.xyz/v1/query/address?token=$EncryptionToken&a=$Address"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const response = await fetch(`https://testnet.ten.xyz/v1/query/address?token=${token}&a=${address}`);\nconst data = await response.text();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"5-revoke-access",children:"5. Revoke Access"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Endpoint:"})," ",(0,s.jsx)(n.code,{children:"POST /v1/revoke?token=$EncryptionToken"})]}),"\n",(0,s.jsx)(n.p,{children:"Deletes encryption token associated with the account."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'curl -X POST "https://testnet.ten.xyz/v1/revoke?token=abc123"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"await fetch(`https://testnet.ten.xyz/v1/revoke?token=${token}`, {\n  method: 'POST'\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"rpc-usage",children:"RPC Usage"}),"\n",(0,s.jsx)(n.p,{children:"After authentication, use the encryption token with RPC calls:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"https://testnet.ten.xyz/v1/?token=<EncryptionToken>\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var s=t(7294);const r={},a=s.createContext(r);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);