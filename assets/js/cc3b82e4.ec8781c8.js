"use strict";(self.webpackChunkten_docs=self.webpackChunkten_docs||[]).push([[4251],{1251:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"tutorials-examples/guessing-game","title":"Guessing Game","description":"Guessing Game","source":"@site/docs/tutorials-examples/guessing-game.md","sourceDirName":"tutorials-examples","slug":"/tutorials-examples/guessing-game","permalink":"/docs/tutorials-examples/guessing-game","draft":false,"unlisted":false,"editUrl":"https://github.com/ten-protocol/ten-documentation/blob/main/docs/tutorials-examples/guessing-game.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Tutorials & Examples","permalink":"/docs/category/tutorials--examples"},"next":{"title":"API References","permalink":"/docs/category/api-references"}}');var i=s(4848),r=s(8453);const a={sidebar_position:1},o="Guessing Game",c={},l=[{value:"<strong>Game Mechanics</strong>",id:"game-mechanics",level:2},{value:"<strong>Playing the Game</strong>",id:"playing-the-game",level:2},{value:"<strong>Building the Guessing Game</strong>",id:"building-the-guessing-game",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"guessing-game",children:"Guessing Game"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Guessing Game",src:s(8398).A+"",width:"2928",height:"1674"})}),"\n",(0,i.jsx)(n.p,{children:"The TEN Guessing Game is a simple yet powerful demonstration of TEN's unique encryption capabilities. Players attempt to guess a secret number, with each guess requiring a token fee. The game showcases the challenges of maintaining secrecy in transparent ecosystems like Ethereum and how TEN addresses these challenges."}),"\n",(0,i.jsx)(n.h2,{id:"game-mechanics",children:(0,i.jsx)(n.strong,{children:"Game Mechanics"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The game's objective is to guess a secret number."}),"\n",(0,i.jsx)(n.li,{children:"Each guess requires an entrance fee of 1 unit of the token (1x10^18 units make a single token)."}),"\n",(0,i.jsx)(n.li,{children:"Correct guesses result in the player receiving all accumulated entrance fees."}),"\n",(0,i.jsx)(n.li,{children:"The game then resets with a new random secret number."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"playing-the-game",children:(0,i.jsx)(n.strong,{children:"Playing the Game"})}),"\n",(0,i.jsx)(n.p,{children:"How to Play the Guessing Game: A Step-by-Step Guide\nThis guide assumes you have a Metamask wallet installed and configured with the TEN testnet."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Verify Gateway Authentication:"})," Ensure your connected account is properly authenticated through the ",(0,i.jsx)(n.a,{href:"https://gateway.ten.xyz/",children:"TEN Gateway"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Visit the Game Website:"})," Navigate to the official ",(0,i.jsx)(n.a,{href:"https://TEN-protocol.github.io/sample-applications/guessing-game-v2/",children:"website"})," of the guessing game."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You can get free testnet tokens from the ",(0,i.jsx)(n.a,{href:"/docs/getting-started/for-users/get-tokens",children:"TEN Faucet"}),"."]})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Make Your Guess:"})," Enter your guess for the secret number within the designated field. This number should be within the specified range (e.g., 1-1000)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Sign the Transaction:"}),' Click on the "Submit" or similar button. A Metamask window will pop up asking you to sign a transaction authorizing your guess on the blockchain. Carefully review the transaction details and gas fees before confirming.']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Wait for the Result:"})," The transaction will be processed on the blockchain, and it may take a few seconds to minutes for the result to be confirmed. You can see the status/result of your guess on the message log below the guessing field."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Inspect the Transaction (Optional):"})," You can explore the details of your guess transaction on the block explorer - ",(0,i.jsx)(n.a,{href:"https://tenscan.io/",children:"Tenscan"}),".This will allow you to see the status, gas usage, and other details associated with your guess."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"building-the-guessing-game",children:(0,i.jsx)(n.strong,{children:"Building the Guessing Game"})}),"\n",(0,i.jsx)(n.p,{children:"This tutorial will guide you through building the Guessing Game on TEN with secure RNG to generate truly random & secure numbers as well as hidden states to make sure the random number to be guessed is secret."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pre-requisites:"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Generate Secure Random Number:"})," We'll use ",(0,i.jsx)(n.code,{children:"block.difficulty"})," to generate a random number. On TEN, ",(0,i.jsx)(n.code,{children:"block.difficulty"})," is private and secure, unlike on Ethereum, where it can be manipulated or predicted."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\ncontract GuessingGame {\n\n    uint256 private secretNumber;\n\n    constructor() {\n        _generateSecretNumber();\n    }\n\n    function _generateSecretNumber() private {\n        uint256 randomNumber = block.difficulty;\n        secretNumber = (randomNumber % 100000) + 1;\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Store the Random Number Privately:"})," TEN offers true on-chain encryption for state variables marked with the private modifier. Even using ",(0,i.jsx)(n.code,{children:"getStorageAt"}),", these variables cannot be accessed."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"uint256 private secretNumber;\n"})}),"\n",(0,i.jsx)(n.p,{children:"This ensures that secretNumber is stored securely and is inaccessible to anyone outside the contract."}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function to Guess the Number:"})," The guessing function allows users to submit their guess for the secret number. If correct, they win the prize pool. If incorrect, they are encouraged to try again."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'function guess(uint256 _number) external payable {\n    require(_number > 0 && _number <= 100000, "The guess should be between 1 & 100000");\n    require(msg.value == 443e14, "Incorrect Fee");\n\n    if(_number == secretNumber) {\n        payable(msg.sender).transfer(address(this).balance);\n        _generateSecretNumber(); // Reset the secret number after a successful guess\n    } else {\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Function to See the Prize Pool:"})," This function allows users to view the current prize pool, which is simply the contract's balance."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"function getContractBalance() external view returns (uint256) {\n    return address(this).balance;\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"6",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Feature to Reset the Secret Number After It Has Been Guessed:"})," After a successful guess, the secret number should be reset to keep the game going. This is handled within the guessing function:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"function _generateSecretNumber() private {\n    uint256 randomNumber = block.difficulty;\n    secretNumber = (randomNumber % 100000) + 1;\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By calling ",(0,i.jsx)(n.code,{children:"_generateSecretNumber()"})," again, the contract resets the secret number, allowing the game to continue with a new random number."]}),"\n",(0,i.jsxs)(n.p,{children:["Find the complete contract & fronTENd here: ",(0,i.jsx)(n.a,{href:"https://github.com/TEN-protocol/sample-applications/tree/main/guessing-game-v2",children:"this GitHub repository"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8398:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/guessing-game-2b17294db01b3d25cf8ef18b6e775b8e.png"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);