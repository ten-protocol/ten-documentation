"use strict";(self.webpackChunkten_docs=self.webpackChunkten_docs||[]).push([[2474],{577:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"getting-started/for-developers/explore-contracts-in-ten","title":"Explore Contracts in TEN","description":"TEN offers a distinct environment for smart contract development so you\'ll need to consider how to design your dApps slightly differently from how you would a transparent dApp. This guide explains these differences:","source":"@site/docs/getting-started/for-developers/explore-contracts-in-ten.md","sourceDirName":"getting-started/for-developers","slug":"/getting-started/for-developers/explore-contracts-in-ten","permalink":"/docs/getting-started/for-developers/explore-contracts-in-ten","draft":false,"unlisted":false,"editUrl":"https://github.com/ten-protocol/ten-documentation/blob/main/docs/getting-started/for-developers/explore-contracts-in-ten.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"For Developers","permalink":"/docs/category/for-developers"},"next":{"title":"Set Up Dev Environment","permalink":"/docs/getting-started/for-developers/setup-dev-env"}}');var i=s(4848),r=s(8453);const o={sidebar_position:1},a="Explore Contracts in TEN",c={},l=[{value:"1. Accessing Storage Values",id:"1-accessing-storage-values",level:2},{value:"Ethereum&#39;s Transparency Challenge",id:"ethereums-transparency-challenge",level:3},{value:"TEN&#39;s Privacy Solution",id:"tens-privacy-solution",level:3},{value:"2. Access Control for Functions",id:"2-access-control-for-functions",level:2},{value:"Access Control Using <code>require</code>",id:"access-control-using-require",level:3},{value:"3. Event Visibility",id:"3-event-visibility",level:2},{value:"4. Secure Random Number Generation in TEN",id:"4-secure-random-number-generation-in-ten",level:2},{value:"Challenges with On-Chain Randomness",id:"challenges-with-on-chain-randomness",level:3},{value:"TEN&#39;s Solution",id:"tens-solution",level:3},{value:"5. Gas Consumption",id:"5-gas-consumption",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"explore-contracts-in-ten",children:"Explore Contracts in TEN"})}),"\n",(0,i.jsx)(n.p,{children:"TEN offers a distinct environment for smart contract development so you'll need to consider how to design your dApps slightly differently from how you would a transparent dApp. This guide explains these differences:"}),"\n",(0,i.jsx)(n.h2,{id:"1-accessing-storage-values",children:"1. Accessing Storage Values"}),"\n",(0,i.jsx)(n.p,{children:"While both Ethereum and TEN allow easy access to public variables, their handling of private variables differs significantly, highlighting Ethereum's transparency challenges and TEN's privacy solutions."}),"\n",(0,i.jsx)(n.h3,{id:"ethereums-transparency-challenge",children:"Ethereum's Transparency Challenge"}),"\n",(0,i.jsxs)(n.p,{children:["In Ethereum, private variables are intended to be accessed solely through functions. However, due to Ethereum's transparent nature, a workaround exists using the ",(0,i.jsx)(n.code,{children:"getStorageAt"})," function. This method can bypass the designated functions, making true private data storage unattainable."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":\nAccessing a private variable in Ethereum:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"uint256 value = eth.getStorageAt(contractAddress, position);\n"})}),"\n",(0,i.jsx)(n.h3,{id:"tens-privacy-solution",children:"TEN's Privacy Solution"}),"\n",(0,i.jsxs)(n.p,{children:["To provide privacy on Ethereum, TEN has disabled the ",(0,i.jsx)(n.code,{children:"getStorageAt"})," function. This ensures that private variables can only be accessed via their associated functions, providing genuine programmable privacy."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":\nAccessing a private variable in TEN:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"private uint256 privateVariable;\n\nfunction getPrivateVariable() public view returns (uint256) {\n    return privateVariable;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"In summary, while Ethereum's transparency poses challenges for true data privacy, TEN offers a robust solution by ensuring that private data remains genuinely private."}),"\n",(0,i.jsx)(n.h2,{id:"2-access-control-for-functions",children:"2. Access Control for Functions"}),"\n",(0,i.jsx)(n.p,{children:"In smart contract development, it's essential to ensure that only authorized entities can access certain functions. This is achieved using access control mechanisms."}),"\n",(0,i.jsxs)(n.h3,{id:"access-control-using-require",children:["Access Control Using ",(0,i.jsx)(n.code,{children:"require"})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"require"})," statement in Solidity is a straightforward way to enforce access control. It checks a condition, and if the condition is not met, the function execution stops, and an optional error message is thrown."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:'address owner = msg.sender;\n\nfunction restrictedFunction() public {\n    require(msg.sender == owner, "Only the owner can call this function.");\n    // Rest of the function logic\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["This example ensures that only the contract's owner can call the ",(0,i.jsx)(n.code,{children:"restrictedFunction"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"3-event-visibility",children:"3. Event Visibility"}),"\n",(0,i.jsx)(n.p,{children:"TEN has specific event visibility rules:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Lifecycle events without an address parameter are public."}),"\n",(0,i.jsx)(n.li,{children:"Events with an address parameter related to an account are private."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"// Public event on TEN\nevent LifecycleEvent(uint256 indexed value);\n\n// Private event on TEN\nevent AccountEvent(address indexed account, uint256 value);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"4-secure-random-number-generation-in-ten",children:"4. Secure Random Number Generation in TEN"}),"\n",(0,i.jsx)(n.p,{children:"Random number generation on blockchains is challenging due to timing, delay, complexity, and fees. TEN offers a unique, immediate, and secure solution."}),"\n",(0,i.jsx)(n.h3,{id:"challenges-with-on-chain-randomness",children:"Challenges with On-Chain Randomness"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Timing"}),": If block producers predict randomness, they can manipulate results."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Delay"}),": Many solutions introduce a delay, affecting user experience."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Complexity & Fees"}),": Solutions like oracles add overhead and costs."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"tens-solution",children:"TEN's Solution"}),"\n",(0,i.jsx)(n.p,{children:"TEN nodes run on secure enclave's, ensuring:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Immediate Randomness"}),": No delays."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Unpredictability"}),": Random numbers are based on an inaccessible private seed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Simplicity & No Extra Fees"}),": Every transaction gets its random seed."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-solidity",children:"function getRandomNumber() public view returns (uint256) {\n    // TEN network injects a secure and unique seed to the prevrandao property, note: on other EVM chains this code would be exploitable by MEV bots\n    return uint256(block.prevrandao);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["TEN's approach ensures secure and straightforward random number generation. For more information on using randomness in TEN, take a look at the ",(0,i.jsx)(n.a,{href:"/docs/standards-primitives/random-numbers",children:"Random Numbers page"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"5-gas-consumption",children:"5. Gas Consumption"}),"\n",(0,i.jsx)(n.p,{children:"Gas consumption is a vital consideration in smart contract development. On TEN, it's essential to optimize your contract functions to ensure efficient gas usage. Always test your contracts in a simulated environment before deploying to gauge gas consumption."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);